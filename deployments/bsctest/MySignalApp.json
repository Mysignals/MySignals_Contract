{
  "address": "0x333E17A26d00cc248CeCd4587229323D9BCe9191",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_registrar",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_fallbackAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_fee",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_payPercent",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "MySignalApp__InsufficientBalance",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "MySignalApp__InvalidAddress",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "MySignalApp__NotFallback",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "MySignalApp__NotProvider",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "MySignalApp__NotRegistrar",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "MySignalApp__TransferFailed",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "oldAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "newAddress",
          "type": "address"
        }
      ],
      "name": "AddressProviderChange",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "provider",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "signalId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "string",
          "name": "userId",
          "type": "string"
        }
      ],
      "name": "CompensateProvider",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "oldAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "newAddress",
          "type": "address"
        }
      ],
      "name": "FallbackChange",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "oldFee",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newFee",
          "type": "uint256"
        }
      ],
      "name": "FeeChange",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "provider",
          "type": "address"
        }
      ],
      "name": "ProviderAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "provider",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "ProviderWithdraw",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "oldAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "newAddress",
          "type": "address"
        }
      ],
      "name": "RegistrarChange",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "string",
          "name": "id",
          "type": "string"
        },
        {
          "indexed": true,
          "internalType": "string",
          "name": "userId",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "SingleDeposit",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "provider",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "TransferDeposits",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_provider",
          "type": "address"
        }
      ],
      "name": "addProvider",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_addr",
          "type": "address"
        }
      ],
      "name": "changeFallback",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_fee",
          "type": "uint256"
        }
      ],
      "name": "changeFee",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_addr",
          "type": "address"
        }
      ],
      "name": "changeRegistrar",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "fallbackWithdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getFallbacks",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getFee",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_addr",
          "type": "address"
        }
      ],
      "name": "getProviderBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getRegistrarBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "i_payPercent",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_provider",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_signalId",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "_userId",
          "type": "string"
        }
      ],
      "name": "payProvider",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_newAddr",
          "type": "address"
        }
      ],
      "name": "providerChangeAddress",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "providerWithdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "registrarWithdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_id",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_userId",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "singleDeposit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_provider",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "transferDeposit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0xb3d9f71c191d35053f0b76882387eb9f528c3d6a8cb0a6e6e0e174e7a5dc1116",
  "receipt": {
    "to": null,
    "from": "0x2D3780568E72EE39137b4D5b49f585fe559410Dc",
    "contractAddress": "0x333E17A26d00cc248CeCd4587229323D9BCe9191",
    "transactionIndex": 1,
    "gasUsed": "1671382",
    "logsBloom": "0x
    "blockHash": "0x35ad309de648237e0a991efe59236c9cb022ba40527b8721c9914ae9c16443f2",
    "transactionHash": "0xb3d9f71c191d35053f0b76882387eb9f528c3d6a8cb0a6e6e0e174e7a5dc1116",
    "logs": [
      {
        "transactionIndex": 1,
        "blockNumber": 34922778,
        "transactionHash": "0xb3d9f71c191d35053f0b76882387eb9f528c3d6a8cb0a6e6e0e174e7a5dc1116",
        "address": "0x333E17A26d00cc248CeCd4587229323D9BCe9191",
        "topics": [
          "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x0000000000000000000000002d3780568e72ee39137b4d5b49f585fe559410dc"
        ],
        "data": "0x00000000000000000000000000000000000000000000003635c9adc5dea00000",
        "logIndex": 0,
        "blockHash": "0x35ad309de648237e0a991efe59236c9cb022ba40527b8721c9914ae9c16443f2"
      }
    ],
    "blockNumber": 34922778,
    "cumulativeGasUsed": "1692382",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x2D3780568E72EE39137b4D5b49f585fe559410Dc",
    "0x2D3780568E72EE39137b4D5b49f585fe559410Dc",
    "2000000000000000",
    5
  ],
  "numDeployments": 2,
  "solcInputHash": "9e3b14f2a64bf96bdb3235cc77ad31f7",
  "metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_registrar\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_fallbackAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_fee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_payPercent\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"MySignalApp__InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MySignalApp__InvalidAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MySignalApp__NotFallback\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MySignalApp__NotProvider\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MySignalApp__NotRegistrar\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MySignalApp__TransferFailed\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"oldAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAddress\",\"type\":\"address\"}],\"name\":\"AddressProviderChange\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"provider\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"signalId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"string\",\"name\":\"userId\",\"type\":\"string\"}],\"name\":\"CompensateProvider\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"oldAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAddress\",\"type\":\"address\"}],\"name\":\"FallbackChange\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"oldFee\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newFee\",\"type\":\"uint256\"}],\"name\":\"FeeChange\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"provider\",\"type\":\"address\"}],\"name\":\"ProviderAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"provider\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"ProviderWithdraw\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"oldAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAddress\",\"type\":\"address\"}],\"name\":\"RegistrarChange\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"string\",\"name\":\"id\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"string\",\"name\":\"userId\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"SingleDeposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"provider\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"TransferDeposits\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_provider\",\"type\":\"address\"}],\"name\":\"addProvider\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_addr\",\"type\":\"address\"}],\"name\":\"changeFallback\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_fee\",\"type\":\"uint256\"}],\"name\":\"changeFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_addr\",\"type\":\"address\"}],\"name\":\"changeRegistrar\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"fallbackWithdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getFallbacks\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_addr\",\"type\":\"address\"}],\"name\":\"getProviderBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getRegistrarBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"i_payPercent\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_provider\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_signalId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_userId\",\"type\":\"string\"}],\"name\":\"payProvider\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newAddr\",\"type\":\"address\"}],\"name\":\"providerChangeAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"providerWithdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"registrarWithdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_id\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_userId\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"singleDeposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_provider\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"transferDeposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/MySignalApp.sol\":\"MySignalApp\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":20000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (token/ERC20/ERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC20.sol\\\";\\nimport \\\"./extensions/IERC20Metadata.sol\\\";\\nimport \\\"../../utils/Context.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC20} interface.\\n *\\n * This implementation is agnostic to the way tokens are created. This means\\n * that a supply mechanism has to be added in a derived contract using {_mint}.\\n * For a generic mechanism see {ERC20PresetMinterPauser}.\\n *\\n * TIP: For a detailed writeup see our guide\\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\\n * to implement supply mechanisms].\\n *\\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\\n * instead returning `false` on failure. This behavior is nonetheless\\n * conventional and does not conflict with the expectations of ERC20\\n * applications.\\n *\\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\\n * This allows applications to reconstruct the allowance for all accounts just\\n * by listening to said events. Other implementations of the EIP may not emit\\n * these events, as it isn't required by the specification.\\n *\\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\\n * functions have been added to mitigate the well-known issues around setting\\n * allowances. See {IERC20-approve}.\\n */\\ncontract ERC20 is Context, IERC20, IERC20Metadata {\\n    mapping(address => uint256) private _balances;\\n\\n    mapping(address => mapping(address => uint256)) private _allowances;\\n\\n    uint256 private _totalSupply;\\n\\n    string private _name;\\n    string private _symbol;\\n\\n    /**\\n     * @dev Sets the values for {name} and {symbol}.\\n     *\\n     * The default value of {decimals} is 18. To select a different value for\\n     * {decimals} you should overload it.\\n     *\\n     * All two of these values are immutable: they can only be set once during\\n     * construction.\\n     */\\n    constructor(string memory name_, string memory symbol_) {\\n        _name = name_;\\n        _symbol = symbol_;\\n    }\\n\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() public view virtual override returns (string memory) {\\n        return _name;\\n    }\\n\\n    /**\\n     * @dev Returns the symbol of the token, usually a shorter version of the\\n     * name.\\n     */\\n    function symbol() public view virtual override returns (string memory) {\\n        return _symbol;\\n    }\\n\\n    /**\\n     * @dev Returns the number of decimals used to get its user representation.\\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\\n     *\\n     * Tokens usually opt for a value of 18, imitating the relationship between\\n     * Ether and Wei. This is the value {ERC20} uses, unless this function is\\n     * overridden;\\n     *\\n     * NOTE: This information is only used for _display_ purposes: it in\\n     * no way affects any of the arithmetic of the contract, including\\n     * {IERC20-balanceOf} and {IERC20-transfer}.\\n     */\\n    function decimals() public view virtual override returns (uint8) {\\n        return 18;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-totalSupply}.\\n     */\\n    function totalSupply() public view virtual override returns (uint256) {\\n        return _totalSupply;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-balanceOf}.\\n     */\\n    function balanceOf(address account) public view virtual override returns (uint256) {\\n        return _balances[account];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transfer}.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - the caller must have a balance of at least `amount`.\\n     */\\n    function transfer(address to, uint256 amount) public virtual override returns (bool) {\\n        address owner = _msgSender();\\n        _transfer(owner, to, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-allowance}.\\n     */\\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\\n        return _allowances[owner][spender];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-approve}.\\n     *\\n     * NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\\n        address owner = _msgSender();\\n        _approve(owner, spender, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transferFrom}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance. This is not\\n     * required by the EIP. See the note at the beginning of {ERC20}.\\n     *\\n     * NOTE: Does not update the allowance if the current allowance\\n     * is the maximum `uint256`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` and `to` cannot be the zero address.\\n     * - `from` must have a balance of at least `amount`.\\n     * - the caller must have allowance for ``from``'s tokens of at least\\n     * `amount`.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) public virtual override returns (bool) {\\n        address spender = _msgSender();\\n        _spendAllowance(from, spender, amount);\\n        _transfer(from, to, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\\n     *\\n     * This is an alternative to {approve} that can be used as a mitigation for\\n     * problems described in {IERC20-approve}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        _approve(owner, spender, allowance(owner, spender) + addedValue);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\\n     *\\n     * This is an alternative to {approve} that can be used as a mitigation for\\n     * problems described in {IERC20-approve}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     * - `spender` must have allowance for the caller of at least\\n     * `subtractedValue`.\\n     */\\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        uint256 currentAllowance = allowance(owner, spender);\\n        require(currentAllowance >= subtractedValue, \\\"ERC20: decreased allowance below zero\\\");\\n        unchecked {\\n            _approve(owner, spender, currentAllowance - subtractedValue);\\n        }\\n\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Moves `amount` of tokens from `from` to `to`.\\n     *\\n     * This internal function is equivalent to {transfer}, and can be used to\\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\\n     *\\n     * Emits a {Transfer} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `from` must have a balance of at least `amount`.\\n     */\\n    function _transfer(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) internal virtual {\\n        require(from != address(0), \\\"ERC20: transfer from the zero address\\\");\\n        require(to != address(0), \\\"ERC20: transfer to the zero address\\\");\\n\\n        _beforeTokenTransfer(from, to, amount);\\n\\n        uint256 fromBalance = _balances[from];\\n        require(fromBalance >= amount, \\\"ERC20: transfer amount exceeds balance\\\");\\n        unchecked {\\n            _balances[from] = fromBalance - amount;\\n            // Overflow not possible: the sum of all balances is capped by totalSupply, and the sum is preserved by\\n            // decrementing then incrementing.\\n            _balances[to] += amount;\\n        }\\n\\n        emit Transfer(from, to, amount);\\n\\n        _afterTokenTransfer(from, to, amount);\\n    }\\n\\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\\n     * the total supply.\\n     *\\n     * Emits a {Transfer} event with `from` set to the zero address.\\n     *\\n     * Requirements:\\n     *\\n     * - `account` cannot be the zero address.\\n     */\\n    function _mint(address account, uint256 amount) internal virtual {\\n        require(account != address(0), \\\"ERC20: mint to the zero address\\\");\\n\\n        _beforeTokenTransfer(address(0), account, amount);\\n\\n        _totalSupply += amount;\\n        unchecked {\\n            // Overflow not possible: balance + amount is at most totalSupply + amount, which is checked above.\\n            _balances[account] += amount;\\n        }\\n        emit Transfer(address(0), account, amount);\\n\\n        _afterTokenTransfer(address(0), account, amount);\\n    }\\n\\n    /**\\n     * @dev Destroys `amount` tokens from `account`, reducing the\\n     * total supply.\\n     *\\n     * Emits a {Transfer} event with `to` set to the zero address.\\n     *\\n     * Requirements:\\n     *\\n     * - `account` cannot be the zero address.\\n     * - `account` must have at least `amount` tokens.\\n     */\\n    function _burn(address account, uint256 amount) internal virtual {\\n        require(account != address(0), \\\"ERC20: burn from the zero address\\\");\\n\\n        _beforeTokenTransfer(account, address(0), amount);\\n\\n        uint256 accountBalance = _balances[account];\\n        require(accountBalance >= amount, \\\"ERC20: burn amount exceeds balance\\\");\\n        unchecked {\\n            _balances[account] = accountBalance - amount;\\n            // Overflow not possible: amount <= accountBalance <= totalSupply.\\n            _totalSupply -= amount;\\n        }\\n\\n        emit Transfer(account, address(0), amount);\\n\\n        _afterTokenTransfer(account, address(0), amount);\\n    }\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\\n     *\\n     * This internal function is equivalent to `approve`, and can be used to\\n     * e.g. set automatic allowances for certain subsystems, etc.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `owner` cannot be the zero address.\\n     * - `spender` cannot be the zero address.\\n     */\\n    function _approve(\\n        address owner,\\n        address spender,\\n        uint256 amount\\n    ) internal virtual {\\n        require(owner != address(0), \\\"ERC20: approve from the zero address\\\");\\n        require(spender != address(0), \\\"ERC20: approve to the zero address\\\");\\n\\n        _allowances[owner][spender] = amount;\\n        emit Approval(owner, spender, amount);\\n    }\\n\\n    /**\\n     * @dev Updates `owner` s allowance for `spender` based on spent `amount`.\\n     *\\n     * Does not update the allowance amount in case of infinite allowance.\\n     * Revert if not enough allowance is available.\\n     *\\n     * Might emit an {Approval} event.\\n     */\\n    function _spendAllowance(\\n        address owner,\\n        address spender,\\n        uint256 amount\\n    ) internal virtual {\\n        uint256 currentAllowance = allowance(owner, spender);\\n        if (currentAllowance != type(uint256).max) {\\n            require(currentAllowance >= amount, \\\"ERC20: insufficient allowance\\\");\\n            unchecked {\\n                _approve(owner, spender, currentAllowance - amount);\\n            }\\n        }\\n    }\\n\\n    /**\\n     * @dev Hook that is called before any transfer of tokens. This includes\\n     * minting and burning.\\n     *\\n     * Calling conditions:\\n     *\\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\\n     * will be transferred to `to`.\\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\\n     * - `from` and `to` are never both zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _beforeTokenTransfer(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) internal virtual {}\\n\\n    /**\\n     * @dev Hook that is called after any transfer of tokens. This includes\\n     * minting and burning.\\n     *\\n     * Calling conditions:\\n     *\\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\\n     * has been transferred to `to`.\\n     * - when `from` is zero, `amount` tokens have been minted for `to`.\\n     * - when `to` is zero, `amount` of ``from``'s tokens have been burned.\\n     * - `from` and `to` are never both zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _afterTokenTransfer(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) internal virtual {}\\n}\\n\",\"keccak256\":\"0x4ffc0547c02ad22925310c585c0f166f8759e2648a09e9b489100c42f15dd98d\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) external returns (bool);\\n}\\n\",\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Metadata.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC20 standard.\\n *\\n * _Available since v4.1._\\n */\\ninterface IERC20Metadata is IERC20 {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"contracts/MySignalApp.sol\":{\"content\":\"// SPDX-License-Identifier: SEE LICENSE IN LICENSE\\npragma solidity 0.8.18;\\n\\nerror MySignalApp__InvalidProviderOrFee();\\nerror MySignalApp__InsufficientBalance();\\nerror MySignalApp__TransferFailed();\\nerror MySignalApp__InvalidAddress();\\nerror MySignalApp__NotRegistrar();\\nerror MySignalApp__NotProvider();\\nerror MySignalApp__NotFallback();\\nerror MySignalApp__InvalidFee();\\n\\nimport {ERC20} from \\\"@openzeppelin/contracts/token/ERC20/ERC20.sol\\\";\\n\\ncontract MySignalApp is ERC20 {\\n    uint256 private s_registrarBalance;\\n    uint256 private s_singleDepositBalance;\\n    uint256 private s_fees;\\n    uint256 public immutable i_payPercent;\\n\\n    address private s_registrar;\\n    address private s_fallbackAddress;\\n\\n    mapping(address => bool) private s_validProvider;\\n    mapping(address => uint256) private s_providerBalance;\\n\\n    event CompensateProvider(\\n        address indexed provider,\\n        uint256 amount,\\n        uint256 indexed signalId,\\n        string indexed userId\\n    );\\n    event SingleDeposit(string indexed id, string indexed userId, uint256 amount);\\n    event AddressProviderChange(address oldAddress, address newAddress);\\n    event TransferDeposits(address indexed provider, uint256 amount);\\n    event ProviderWithdraw(address indexed provider, uint256 amount);\\n    event RegistrarChange(address oldAddress, address newAddress);\\n    event FallbackChange(address oldAddress, address newAddress);\\n    event FeeChange(uint256 oldFee, uint256 newFee);\\n    event ProviderAdded(address provider);\\n\\n    modifier onlyProvider() {\\n        if (!s_validProvider[msg.sender]) {\\n            revert MySignalApp__NotProvider();\\n        }\\n        _;\\n    }\\n\\n    modifier onlyRegistrar() {\\n        if (msg.sender != s_registrar) revert MySignalApp__NotRegistrar();\\n        _;\\n    }\\n\\n    constructor(\\n        address _registrar,\\n        address _fallbackAddress,\\n        uint256 _fee,\\n        uint256 _payPercent\\n    ) ERC20(\\\"Signal Token\\\", \\\"SSN\\\") {\\n        s_registrar = _registrar;\\n        s_fallbackAddress = _fallbackAddress;\\n        s_fees = _fee;\\n        i_payPercent = _payPercent;\\n\\n        _mint(msg.sender, 1000 * 10 ** decimals());\\n    }\\n\\n    function payProvider(\\n        address _provider,\\n        uint256 _signalId,\\n        string calldata _userId\\n    ) external {\\n        if (!s_validProvider[_provider]) revert MySignalApp__NotProvider();\\n        uint256 charge = s_fees;\\n        uint256 fee = (charge * i_payPercent) / 100;\\n\\n        s_providerBalance[_provider] += (charge - fee);\\n        s_registrarBalance += fee;\\n        _transfer(msg.sender, address(this), charge);\\n\\n        emit CompensateProvider(_provider, charge - fee, _signalId, _userId);\\n    }\\n\\n    function singleDeposit(\\n        string calldata _id,\\n        string calldata _userId,\\n        uint256 _amount\\n    ) external {\\n        uint256 fee = (_amount * i_payPercent) / 100;\\n        s_singleDepositBalance += (_amount - fee);\\n        s_registrarBalance += fee;\\n        _transfer(msg.sender, address(this), _amount);\\n        emit SingleDeposit(_id, _userId, _amount - fee);\\n    }\\n\\n    function addProvider(address _provider) external onlyRegistrar {\\n        s_validProvider[_provider] = true;\\n        emit ProviderAdded(_provider);\\n    }\\n\\n    function providerChangeAddress(address _newAddr) external onlyProvider {\\n        uint256 oldAddressBalance = s_providerBalance[msg.sender];\\n        s_providerBalance[msg.sender] = 0;\\n\\n        s_validProvider[msg.sender] = false;\\n        s_validProvider[_newAddr] = true;\\n        _transfer(address(this), msg.sender, oldAddressBalance);\\n\\n        emit AddressProviderChange(msg.sender, _newAddr);\\n    }\\n\\n    function providerWithdraw(uint256 _amount) external onlyProvider {\\n        if (_amount > s_providerBalance[msg.sender])\\n            revert MySignalApp__InsufficientBalance();\\n\\n        s_providerBalance[msg.sender] -= _amount;\\n        _transfer(address(this), msg.sender, _amount);\\n\\n        emit ProviderWithdraw(msg.sender, _amount);\\n    }\\n\\n    function registrarWithdraw(uint256 _amount) external onlyRegistrar {\\n        if (_amount > s_registrarBalance) revert MySignalApp__InsufficientBalance();\\n\\n        s_registrarBalance -= _amount;\\n        _transfer(address(this), msg.sender, _amount);\\n    }\\n\\n    function transferDeposit(address _provider, uint256 _amount) external onlyRegistrar {\\n        if (!s_validProvider[_provider]) revert MySignalApp__NotProvider();\\n        if (_amount > s_singleDepositBalance) revert MySignalApp__InsufficientBalance();\\n\\n        s_singleDepositBalance -= _amount;\\n        _transfer(address(this), _provider, _amount);\\n\\n        emit TransferDeposits(_provider, _amount);\\n    }\\n\\n    function fallbackWithdraw(uint256 _amount) external {\\n        if (msg.sender != s_fallbackAddress) revert MySignalApp__NotFallback();\\n        if (_amount > address(this).balance) revert MySignalApp__InsufficientBalance();\\n\\n        (bool sent, ) = payable(msg.sender).call{value: address(this).balance}(\\\"\\\");\\n        if (!sent) revert MySignalApp__TransferFailed();\\n    }\\n\\n    function changeFee(uint256 _fee) external onlyRegistrar {\\n        uint256 oldFee = s_fees;\\n        s_fees = _fee;\\n        emit FeeChange(oldFee, _fee);\\n    }\\n\\n    function changeRegistrar(address _addr) external onlyRegistrar {\\n        if (_addr == address(0)) revert MySignalApp__InvalidAddress();\\n        address oldAddress = s_registrar;\\n        s_registrar = _addr;\\n        emit RegistrarChange(oldAddress, _addr);\\n    }\\n\\n    function changeFallback(address _addr) external {\\n        if (msg.sender != s_fallbackAddress) revert MySignalApp__NotFallback();\\n        if (_addr == address(0)) revert MySignalApp__InvalidAddress();\\n        address oldAddress = s_fallbackAddress;\\n        s_fallbackAddress = _addr;\\n        emit FallbackChange(oldAddress, _addr);\\n    }\\n\\n    function getFee() external view returns (uint256) {\\n        return s_fees;\\n    }\\n\\n    function getRegistrarBalance() external view returns (uint256) {\\n        return s_registrarBalance;\\n    }\\n\\n    function getFallbacks() external view returns (uint256) {\\n        return address(this).balance;\\n    }\\n\\n    function getProviderBalance(address _addr) external view returns (uint256) {\\n        return s_providerBalance[_addr];\\n    }\\n}\\n\",\"keccak256\":\"0xa4874a0f1427fcd1f0afc5f9bdc67e847194ff84892cad97b2cf97e4cf8652c3\",\"license\":\"SEE LICENSE IN LICENSE\"}},\"version\":1}",
  "bytecode": "0x60a06040523480156200001157600080fd5b5060405162001f7238038062001f728339810160408190526200003491620001f3565b6040518060400160405280600c81526020016b29b4b3b730b6102a37b5b2b760a11b8152506040518060400160405280600381526020016229a9a760e91b8152508160039081620000869190620002df565b506004620000958282620002df565b5050600880546001600160a01b038088166001600160a01b031992831617909255600980549287169290911691909117905550600782905560808190526200010133620000e0601290565b620000ed90600a620004c0565b620000fb906103e8620004d8565b6200010b565b5050505062000508565b6001600160a01b038216620001665760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015260640160405180910390fd5b80600260008282546200017a9190620004f2565b90915550506001600160a01b038216600081815260208181526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35050565b505050565b80516001600160a01b0381168114620001ee57600080fd5b919050565b600080600080608085870312156200020a57600080fd5b6200021585620001d6565b93506200022560208601620001d6565b6040860151606090960151949790965092505050565b634e487b7160e01b600052604160045260246000fd5b600181811c908216806200026657607f821691505b6020821081036200028757634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115620001d157600081815260208120601f850160051c81016020861015620002b65750805b601f850160051c820191505b81811015620002d757828155600101620002c2565b505050505050565b81516001600160401b03811115620002fb57620002fb6200023b565b62000313816200030c845462000251565b846200028d565b602080601f8311600181146200034b5760008415620003325750858301515b600019600386901b1c1916600185901b178555620002d7565b600085815260208120601f198616915b828110156200037c578886015182559484019460019091019084016200035b565b50858210156200039b5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b634e487b7160e01b600052601160045260246000fd5b600181815b8085111562000402578160001904821115620003e657620003e6620003ab565b80851615620003f457918102915b93841c9390800290620003c6565b509250929050565b6000826200041b57506001620004ba565b816200042a57506000620004ba565b81600181146200044357600281146200044e576200046e565b6001915050620004ba565b60ff841115620004625762000462620003ab565b50506001821b620004ba565b5060208310610133831016604e8410600b841016171562000493575081810a620004ba565b6200049f8383620003c1565b8060001904821115620004b657620004b6620003ab565b0290505b92915050565b6000620004d160ff8416836200040a565b9392505050565b8082028115828204841417620004ba57620004ba620003ab565b80820180821115620004ba57620004ba620003ab565b608051611a40620005326000396000818161033401528181610b690152610cbf0152611a406000f3fe608060405234801561001057600080fd5b50600436106101b95760003560e01c806370a08231116100f957806395d89b4111610097578063a457c2d711610071578063a457c2d7146103c2578063a9059cbb146103d5578063ced72f87146103e8578063dd62ed3e146103f057600080fd5b806395d89b411461039f5780639b2f9842146103a75780639e2176f9146103af57600080fd5b806376b58810116100d357806376b588101461031c5780637d91eef21461032f578063832eea0c146103565780638a3def651461038c57600080fd5b806370a08231146102c05780637538668a146102f6578063756882a31461030957600080fd5b80632b96942b1161016657806346e2577a1161014057806346e2577a1461027457806350f3dbec14610287578063576cf6671461029a5780636a1db1bf146102ad57600080fd5b80632b96942b1461023f578063313ce56714610252578063395093511461026157600080fd5b80631d7f80ae116101975780631d7f80ae1461021157806323b872dd1461022657806325d638e51461023957600080fd5b806306fdde03146101be578063095ea7b3146101dc57806318160ddd146101ff575b600080fd5b6101c6610436565b6040516101d39190611680565b60405180910390f35b6101ef6101ea366004611715565b6104c8565b60405190151581526020016101d3565b6002545b6040519081526020016101d3565b61022461021f36600461173f565b6104e2565b005b6101ef610234366004611761565b6105fa565b47610203565b61022461024d36600461179d565b61061e565b604051601281526020016101d3565b6101ef61026f366004611715565b61072f565b61022461028236600461173f565b61077b565b610224610295366004611715565b610851565b6102246102a836600461173f565b6109b4565b6102246102bb36600461179d565b610ad1565b6102036102ce36600461173f565b73ffffffffffffffffffffffffffffffffffffffff1660009081526020819052604090205490565b6102246103043660046117ff565b610b60565b610224610317366004611873565b610c54565b61022461032a36600461173f565b610dce565b6102037f000000000000000000000000000000000000000000000000000000000000000081565b61020361036436600461173f565b73ffffffffffffffffffffffffffffffffffffffff166000908152600b602052604090205490565b61022461039a36600461179d565b610eeb565b6101c6610f9e565b600554610203565b6102246103bd36600461179d565b610fad565b6101ef6103d0366004611715565b6110a7565b6101ef6103e3366004611715565b61117d565b600754610203565b6102036103fe3660046118cd565b73ffffffffffffffffffffffffffffffffffffffff918216600090815260016020908152604080832093909416825291909152205490565b60606003805461044590611900565b80601f016020809104026020016040519081016040528092919081815260200182805461047190611900565b80156104be5780601f10610493576101008083540402835291602001916104be565b820191906000526020600020905b8154815290600101906020018083116104a157829003601f168201915b5050505050905090565b6000336104d681858561118b565b60019150505b92915050565b336000908152600a602052604090205460ff1661052b576040517fa41eb8c200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b336000818152600b60209081526040808320805490849055600a90925280832080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0090811690915573ffffffffffffffffffffffffffffffffffffffff8616845292208054909216600117909155906105a79030908361133e565b6040805133815273ffffffffffffffffffffffffffffffffffffffff841660208201527f5bbda34f4283e006dc680407c75f3f17c43d2869c203923c1331d3800398a71b91015b60405180910390a15050565b6000336106088582856115af565b61061385858561133e565b506001949350505050565b60095473ffffffffffffffffffffffffffffffffffffffff16331461066f576040517f824f28fa00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b478111156106a9576040517f882b286b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b604051600090339047908381818185875af1925050503d80600081146106eb576040519150601f19603f3d011682016040523d82523d6000602084013e6106f0565b606091505b505090508061072b576040517f1f2f4bab00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5050565b33600081815260016020908152604080832073ffffffffffffffffffffffffffffffffffffffff871684529091528120549091906104d69082908690610776908790611982565b61118b565b60085473ffffffffffffffffffffffffffffffffffffffff1633146107cc576040517fece6d48800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff81166000818152600a602090815260409182902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0016600117905590519182527fae9c2c6481964847714ce58f65a7f6dcc41d0d8394449bacdf161b5920c4744a910160405180910390a150565b60085473ffffffffffffffffffffffffffffffffffffffff1633146108a2576040517fece6d48800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff82166000908152600a602052604090205460ff16610901576040517fa41eb8c200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60065481111561093d576040517f882b286b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b806006600082825461094f9190611995565b90915550610960905030838361133e565b8173ffffffffffffffffffffffffffffffffffffffff167fa014a94942f6e08c8d273b8c817d0a40902e24ad69524f015247f12f839210b9826040516109a891815260200190565b60405180910390a25050565b60095473ffffffffffffffffffffffffffffffffffffffff163314610a05576040517f824f28fa00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff8116610a52576040517f247e2d4a00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6009805473ffffffffffffffffffffffffffffffffffffffff8381167fffffffffffffffffffffffff000000000000000000000000000000000000000083168117909355604080519190921680825260208201939093527f9cfd98ce2b0572a77cf9d71bacef7955c853a989204db1ce37fbee74f280d35b91016105ee565b60085473ffffffffffffffffffffffffffffffffffffffff163314610b22576040517fece6d48800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600780549082905560408051828152602081018490527fa995ac7c2dc5fdc05b41983e69d4d9fbd224a8528bc7d86eabfd533cd3ca449791016105ee565b60006064610b8e7f0000000000000000000000000000000000000000000000000000000000000000846119a8565b610b9891906119bf565b9050610ba48183611995565b60066000828254610bb59190611982565b925050819055508060056000828254610bce9190611982565b90915550610bdf905033308461133e565b8383604051610bef9291906119fa565b60405180910390208686604051610c079291906119fa565b6040519081900390207f6052e7f5bf11db6ab3cca1d67770783fdc2e8a693698332ecc2e1ada63ea86f4610c3b8486611995565b60405190815260200160405180910390a3505050505050565b73ffffffffffffffffffffffffffffffffffffffff84166000908152600a602052604090205460ff16610cb3576040517fa41eb8c200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60075460006064610ce47f0000000000000000000000000000000000000000000000000000000000000000846119a8565b610cee91906119bf565b9050610cfa8183611995565b73ffffffffffffffffffffffffffffffffffffffff87166000908152600b602052604081208054909190610d2f908490611982565b925050819055508060056000828254610d489190611982565b90915550610d59905033308461133e565b8383604051610d699291906119fa565b6040519081900390208573ffffffffffffffffffffffffffffffffffffffff88167fe44d231cb2ba9f7b57703db70ddadfa670b4d6f5905b2e20e8c876f47cadeb7a610db58587611995565b60405190815260200160405180910390a4505050505050565b60085473ffffffffffffffffffffffffffffffffffffffff163314610e1f576040517fece6d48800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff8116610e6c576040517f247e2d4a00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6008805473ffffffffffffffffffffffffffffffffffffffff8381167fffffffffffffffffffffffff000000000000000000000000000000000000000083168117909355604080519190921680825260208201939093527faa91ef4e7d0a22f1b92d0eb50b6e60b1034e11c61318a81e150143d5715ebb3991016105ee565b60085473ffffffffffffffffffffffffffffffffffffffff163314610f3c576040517fece6d48800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600554811115610f78576040517f882b286b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060056000828254610f8a9190611995565b90915550610f9b905030338361133e565b50565b60606004805461044590611900565b336000908152600a602052604090205460ff16610ff6576040517fa41eb8c200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b336000908152600b602052604090205481111561103f576040517f882b286b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b336000908152600b60205260408120805483929061105e908490611995565b9091555061106f905030338361133e565b60405181815233907f12e802b6ed6e970b958406df898001b6336cab376c17f335ea72d122ecdf3c2d9060200160405180910390a250565b33600081815260016020908152604080832073ffffffffffffffffffffffffffffffffffffffff8716845290915281205490919083811015611170576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760448201527f207a65726f00000000000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b610613828686840361118b565b6000336104d681858561133e565b73ffffffffffffffffffffffffffffffffffffffff831661122d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460448201527f72657373000000000000000000000000000000000000000000000000000000006064820152608401611167565b73ffffffffffffffffffffffffffffffffffffffff82166112d0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f20616464726560448201527f73730000000000000000000000000000000000000000000000000000000000006064820152608401611167565b73ffffffffffffffffffffffffffffffffffffffff83811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b73ffffffffffffffffffffffffffffffffffffffff83166113e1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f20616460448201527f64726573730000000000000000000000000000000000000000000000000000006064820152608401611167565b73ffffffffffffffffffffffffffffffffffffffff8216611484576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201527f65737300000000000000000000000000000000000000000000000000000000006064820152608401611167565b73ffffffffffffffffffffffffffffffffffffffff83166000908152602081905260409020548181101561153a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e742065786365656473206260448201527f616c616e636500000000000000000000000000000000000000000000000000006064820152608401611167565b73ffffffffffffffffffffffffffffffffffffffff848116600081815260208181526040808320878703905593871680835291849020805487019055925185815290927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35b50505050565b73ffffffffffffffffffffffffffffffffffffffff8381166000908152600160209081526040808320938616835292905220547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146115a95781811015611673576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401611167565b6115a9848484840361118b565b600060208083528351808285015260005b818110156116ad57858101830151858201604001528201611691565b5060006040828601015260407fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f8301168501019250505092915050565b803573ffffffffffffffffffffffffffffffffffffffff8116811461171057600080fd5b919050565b6000806040838503121561172857600080fd5b611731836116ec565b946020939093013593505050565b60006020828403121561175157600080fd5b61175a826116ec565b9392505050565b60008060006060848603121561177657600080fd5b61177f846116ec565b925061178d602085016116ec565b9150604084013590509250925092565b6000602082840312156117af57600080fd5b5035919050565b60008083601f8401126117c857600080fd5b50813567ffffffffffffffff8111156117e057600080fd5b6020830191508360208285010111156117f857600080fd5b9250929050565b60008060008060006060868803121561181757600080fd5b853567ffffffffffffffff8082111561182f57600080fd5b61183b89838a016117b6565b9097509550602088013591508082111561185457600080fd5b50611861888289016117b6565b96999598509660400135949350505050565b6000806000806060858703121561188957600080fd5b611892856116ec565b935060208501359250604085013567ffffffffffffffff8111156118b557600080fd5b6118c1878288016117b6565b95989497509550505050565b600080604083850312156118e057600080fd5b6118e9836116ec565b91506118f7602084016116ec565b90509250929050565b600181811c9082168061191457607f821691505b60208210810361194d577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b808201808211156104dc576104dc611953565b818103818111156104dc576104dc611953565b80820281158282048414176104dc576104dc611953565b6000826119f5577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b500490565b818382376000910190815291905056fea264697066735822122004348b61f74d84d5175b7b429f4f8dec1ba95e702d368f8c4fb91c245282670864736f6c63430008120033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106101b95760003560e01c806370a08231116100f957806395d89b4111610097578063a457c2d711610071578063a457c2d7146103c2578063a9059cbb146103d5578063ced72f87146103e8578063dd62ed3e146103f057600080fd5b806395d89b411461039f5780639b2f9842146103a75780639e2176f9146103af57600080fd5b806376b58810116100d357806376b588101461031c5780637d91eef21461032f578063832eea0c146103565780638a3def651461038c57600080fd5b806370a08231146102c05780637538668a146102f6578063756882a31461030957600080fd5b80632b96942b1161016657806346e2577a1161014057806346e2577a1461027457806350f3dbec14610287578063576cf6671461029a5780636a1db1bf146102ad57600080fd5b80632b96942b1461023f578063313ce56714610252578063395093511461026157600080fd5b80631d7f80ae116101975780631d7f80ae1461021157806323b872dd1461022657806325d638e51461023957600080fd5b806306fdde03146101be578063095ea7b3146101dc57806318160ddd146101ff575b600080fd5b6101c6610436565b6040516101d39190611680565b60405180910390f35b6101ef6101ea366004611715565b6104c8565b60405190151581526020016101d3565b6002545b6040519081526020016101d3565b61022461021f36600461173f565b6104e2565b005b6101ef610234366004611761565b6105fa565b47610203565b61022461024d36600461179d565b61061e565b604051601281526020016101d3565b6101ef61026f366004611715565b61072f565b61022461028236600461173f565b61077b565b610224610295366004611715565b610851565b6102246102a836600461173f565b6109b4565b6102246102bb36600461179d565b610ad1565b6102036102ce36600461173f565b73ffffffffffffffffffffffffffffffffffffffff1660009081526020819052604090205490565b6102246103043660046117ff565b610b60565b610224610317366004611873565b610c54565b61022461032a36600461173f565b610dce565b6102037f000000000000000000000000000000000000000000000000000000000000000081565b61020361036436600461173f565b73ffffffffffffffffffffffffffffffffffffffff166000908152600b602052604090205490565b61022461039a36600461179d565b610eeb565b6101c6610f9e565b600554610203565b6102246103bd36600461179d565b610fad565b6101ef6103d0366004611715565b6110a7565b6101ef6103e3366004611715565b61117d565b600754610203565b6102036103fe3660046118cd565b73ffffffffffffffffffffffffffffffffffffffff918216600090815260016020908152604080832093909416825291909152205490565b60606003805461044590611900565b80601f016020809104026020016040519081016040528092919081815260200182805461047190611900565b80156104be5780601f10610493576101008083540402835291602001916104be565b820191906000526020600020905b8154815290600101906020018083116104a157829003601f168201915b5050505050905090565b6000336104d681858561118b565b60019150505b92915050565b336000908152600a602052604090205460ff1661052b576040517fa41eb8c200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b336000818152600b60209081526040808320805490849055600a90925280832080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0090811690915573ffffffffffffffffffffffffffffffffffffffff8616845292208054909216600117909155906105a79030908361133e565b6040805133815273ffffffffffffffffffffffffffffffffffffffff841660208201527f5bbda34f4283e006dc680407c75f3f17c43d2869c203923c1331d3800398a71b91015b60405180910390a15050565b6000336106088582856115af565b61061385858561133e565b506001949350505050565b60095473ffffffffffffffffffffffffffffffffffffffff16331461066f576040517f824f28fa00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b478111156106a9576040517f882b286b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b604051600090339047908381818185875af1925050503d80600081146106eb576040519150601f19603f3d011682016040523d82523d6000602084013e6106f0565b606091505b505090508061072b576040517f1f2f4bab00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5050565b33600081815260016020908152604080832073ffffffffffffffffffffffffffffffffffffffff871684529091528120549091906104d69082908690610776908790611982565b61118b565b60085473ffffffffffffffffffffffffffffffffffffffff1633146107cc576040517fece6d48800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff81166000818152600a602090815260409182902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0016600117905590519182527fae9c2c6481964847714ce58f65a7f6dcc41d0d8394449bacdf161b5920c4744a910160405180910390a150565b60085473ffffffffffffffffffffffffffffffffffffffff1633146108a2576040517fece6d48800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff82166000908152600a602052604090205460ff16610901576040517fa41eb8c200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60065481111561093d576040517f882b286b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b806006600082825461094f9190611995565b90915550610960905030838361133e565b8173ffffffffffffffffffffffffffffffffffffffff167fa014a94942f6e08c8d273b8c817d0a40902e24ad69524f015247f12f839210b9826040516109a891815260200190565b60405180910390a25050565b60095473ffffffffffffffffffffffffffffffffffffffff163314610a05576040517f824f28fa00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff8116610a52576040517f247e2d4a00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6009805473ffffffffffffffffffffffffffffffffffffffff8381167fffffffffffffffffffffffff000000000000000000000000000000000000000083168117909355604080519190921680825260208201939093527f9cfd98ce2b0572a77cf9d71bacef7955c853a989204db1ce37fbee74f280d35b91016105ee565b60085473ffffffffffffffffffffffffffffffffffffffff163314610b22576040517fece6d48800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600780549082905560408051828152602081018490527fa995ac7c2dc5fdc05b41983e69d4d9fbd224a8528bc7d86eabfd533cd3ca449791016105ee565b60006064610b8e7f0000000000000000000000000000000000000000000000000000000000000000846119a8565b610b9891906119bf565b9050610ba48183611995565b60066000828254610bb59190611982565b925050819055508060056000828254610bce9190611982565b90915550610bdf905033308461133e565b8383604051610bef9291906119fa565b60405180910390208686604051610c079291906119fa565b6040519081900390207f6052e7f5bf11db6ab3cca1d67770783fdc2e8a693698332ecc2e1ada63ea86f4610c3b8486611995565b60405190815260200160405180910390a3505050505050565b73ffffffffffffffffffffffffffffffffffffffff84166000908152600a602052604090205460ff16610cb3576040517fa41eb8c200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60075460006064610ce47f0000000000000000000000000000000000000000000000000000000000000000846119a8565b610cee91906119bf565b9050610cfa8183611995565b73ffffffffffffffffffffffffffffffffffffffff87166000908152600b602052604081208054909190610d2f908490611982565b925050819055508060056000828254610d489190611982565b90915550610d59905033308461133e565b8383604051610d699291906119fa565b6040519081900390208573ffffffffffffffffffffffffffffffffffffffff88167fe44d231cb2ba9f7b57703db70ddadfa670b4d6f5905b2e20e8c876f47cadeb7a610db58587611995565b60405190815260200160405180910390a4505050505050565b60085473ffffffffffffffffffffffffffffffffffffffff163314610e1f576040517fece6d48800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff8116610e6c576040517f247e2d4a00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6008805473ffffffffffffffffffffffffffffffffffffffff8381167fffffffffffffffffffffffff000000000000000000000000000000000000000083168117909355604080519190921680825260208201939093527faa91ef4e7d0a22f1b92d0eb50b6e60b1034e11c61318a81e150143d5715ebb3991016105ee565b60085473ffffffffffffffffffffffffffffffffffffffff163314610f3c576040517fece6d48800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600554811115610f78576040517f882b286b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060056000828254610f8a9190611995565b90915550610f9b905030338361133e565b50565b60606004805461044590611900565b336000908152600a602052604090205460ff16610ff6576040517fa41eb8c200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b336000908152600b602052604090205481111561103f576040517f882b286b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b336000908152600b60205260408120805483929061105e908490611995565b9091555061106f905030338361133e565b60405181815233907f12e802b6ed6e970b958406df898001b6336cab376c17f335ea72d122ecdf3c2d9060200160405180910390a250565b33600081815260016020908152604080832073ffffffffffffffffffffffffffffffffffffffff8716845290915281205490919083811015611170576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760448201527f207a65726f00000000000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b610613828686840361118b565b6000336104d681858561133e565b73ffffffffffffffffffffffffffffffffffffffff831661122d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460448201527f72657373000000000000000000000000000000000000000000000000000000006064820152608401611167565b73ffffffffffffffffffffffffffffffffffffffff82166112d0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f20616464726560448201527f73730000000000000000000000000000000000000000000000000000000000006064820152608401611167565b73ffffffffffffffffffffffffffffffffffffffff83811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b73ffffffffffffffffffffffffffffffffffffffff83166113e1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f20616460448201527f64726573730000000000000000000000000000000000000000000000000000006064820152608401611167565b73ffffffffffffffffffffffffffffffffffffffff8216611484576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201527f65737300000000000000000000000000000000000000000000000000000000006064820152608401611167565b73ffffffffffffffffffffffffffffffffffffffff83166000908152602081905260409020548181101561153a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e742065786365656473206260448201527f616c616e636500000000000000000000000000000000000000000000000000006064820152608401611167565b73ffffffffffffffffffffffffffffffffffffffff848116600081815260208181526040808320878703905593871680835291849020805487019055925185815290927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35b50505050565b73ffffffffffffffffffffffffffffffffffffffff8381166000908152600160209081526040808320938616835292905220547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146115a95781811015611673576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401611167565b6115a9848484840361118b565b600060208083528351808285015260005b818110156116ad57858101830151858201604001528201611691565b5060006040828601015260407fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f8301168501019250505092915050565b803573ffffffffffffffffffffffffffffffffffffffff8116811461171057600080fd5b919050565b6000806040838503121561172857600080fd5b611731836116ec565b946020939093013593505050565b60006020828403121561175157600080fd5b61175a826116ec565b9392505050565b60008060006060848603121561177657600080fd5b61177f846116ec565b925061178d602085016116ec565b9150604084013590509250925092565b6000602082840312156117af57600080fd5b5035919050565b60008083601f8401126117c857600080fd5b50813567ffffffffffffffff8111156117e057600080fd5b6020830191508360208285010111156117f857600080fd5b9250929050565b60008060008060006060868803121561181757600080fd5b853567ffffffffffffffff8082111561182f57600080fd5b61183b89838a016117b6565b9097509550602088013591508082111561185457600080fd5b50611861888289016117b6565b96999598509660400135949350505050565b6000806000806060858703121561188957600080fd5b611892856116ec565b935060208501359250604085013567ffffffffffffffff8111156118b557600080fd5b6118c1878288016117b6565b95989497509550505050565b600080604083850312156118e057600080fd5b6118e9836116ec565b91506118f7602084016116ec565b90509250929050565b600181811c9082168061191457607f821691505b60208210810361194d577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b808201808211156104dc576104dc611953565b818103818111156104dc576104dc611953565b80820281158282048414176104dc576104dc611953565b6000826119f5577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b500490565b818382376000910190815291905056fea264697066735822122004348b61f74d84d5175b7b429f4f8dec1ba95e702d368f8c4fb91c245282670864736f6c63430008120033",
  "devdoc": {
    "events": {
      "Approval(address,address,uint256)": {
        "details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
      },
      "Transfer(address,address,uint256)": {
        "details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
      }
    },
    "kind": "dev",
    "methods": {
      "allowance(address,address)": {
        "details": "See {IERC20-allowance}."
      },
      "approve(address,uint256)": {
        "details": "See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
      },
      "balanceOf(address)": {
        "details": "See {IERC20-balanceOf}."
      },
      "decimals()": {
        "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
      },
      "decreaseAllowance(address,uint256)": {
        "details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
      },
      "increaseAllowance(address,uint256)": {
        "details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
      },
      "name()": {
        "details": "Returns the name of the token."
      },
      "symbol()": {
        "details": "Returns the symbol of the token, usually a shorter version of the name."
      },
      "totalSupply()": {
        "details": "See {IERC20-totalSupply}."
      },
      "transfer(address,uint256)": {
        "details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`."
      },
      "transferFrom(address,address,uint256)": {
        "details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 15,
        "contract": "contracts/MySignalApp.sol:MySignalApp",
        "label": "_balances",
        "offset": 0,
        "slot": "0",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 21,
        "contract": "contracts/MySignalApp.sol:MySignalApp",
        "label": "_allowances",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
      },
      {
        "astId": 23,
        "contract": "contracts/MySignalApp.sol:MySignalApp",
        "label": "_totalSupply",
        "offset": 0,
        "slot": "2",
        "type": "t_uint256"
      },
      {
        "astId": 25,
        "contract": "contracts/MySignalApp.sol:MySignalApp",
        "label": "_name",
        "offset": 0,
        "slot": "3",
        "type": "t_string_storage"
      },
      {
        "astId": 27,
        "contract": "contracts/MySignalApp.sol:MySignalApp",
        "label": "_symbol",
        "offset": 0,
        "slot": "4",
        "type": "t_string_storage"
      },
      {
        "astId": 735,
        "contract": "contracts/MySignalApp.sol:MySignalApp",
        "label": "s_registrarBalance",
        "offset": 0,
        "slot": "5",
        "type": "t_uint256"
      },
      {
        "astId": 737,
        "contract": "contracts/MySignalApp.sol:MySignalApp",
        "label": "s_singleDepositBalance",
        "offset": 0,
        "slot": "6",
        "type": "t_uint256"
      },
      {
        "astId": 739,
        "contract": "contracts/MySignalApp.sol:MySignalApp",
        "label": "s_fees",
        "offset": 0,
        "slot": "7",
        "type": "t_uint256"
      },
      {
        "astId": 743,
        "contract": "contracts/MySignalApp.sol:MySignalApp",
        "label": "s_registrar",
        "offset": 0,
        "slot": "8",
        "type": "t_address"
      },
      {
        "astId": 745,
        "contract": "contracts/MySignalApp.sol:MySignalApp",
        "label": "s_fallbackAddress",
        "offset": 0,
        "slot": "9",
        "type": "t_address"
      },
      {
        "astId": 749,
        "contract": "contracts/MySignalApp.sol:MySignalApp",
        "label": "s_validProvider",
        "offset": 0,
        "slot": "10",
        "type": "t_mapping(t_address,t_bool)"
      },
      {
        "astId": 753,
        "contract": "contracts/MySignalApp.sol:MySignalApp",
        "label": "s_providerBalance",
        "offset": 0,
        "slot": "11",
        "type": "t_mapping(t_address,t_uint256)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_mapping(t_address,t_bool)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => mapping(address => uint256))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_address,t_uint256)"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}